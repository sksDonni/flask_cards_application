var V=Object.defineProperty,T=Object.defineProperties;var x=Object.getOwnPropertyDescriptors;var w=Object.getOwnPropertySymbols;var O=Object.prototype.hasOwnProperty,Y=Object.prototype.propertyIsEnumerable;var R=(e,t,o)=>t in e?V(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o,_=(e,t)=>{for(var o in t||(t={}))O.call(t,o)&&R(e,o,t[o]);if(w)for(var o of w(t))Y.call(t,o)&&R(e,o,t[o]);return e},y=(e,t)=>T(e,x(t));import{o as l,c as a,a as k,u as N,R as G,m as b,r as E,F as A,b as B,w as D,d as s,t as h,e as c,f as F,g as K,h as p,v,i as $,j as P,k as j,l as m,V as H,n as M,p as Q}from"./vendor.2f0bcf3d.js";const W=function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))r(i);new MutationObserver(i=>{for(const d of i)if(d.type==="childList")for(const n of d.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&r(n)}).observe(document,{childList:!0,subtree:!0});function o(i){const d={};return i.integrity&&(d.integrity=i.integrity),i.referrerpolicy&&(d.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?d.credentials="include":i.crossorigin==="anonymous"?d.credentials="omit":d.credentials="same-origin",d}function r(i){if(i.ep)return;i.ep=!0;const d=o(i);fetch(i.href,d)}};W();const z={methods:{},async mounted(){console.log(this.$store.state,this.$store.dispatch),await this.$store.dispatch("fetchDirectories")}},J=Object.assign(z,{setup(e){return(t,o)=>(l(),a("div",null,[k(N(G))]))}}),X="modulepreload",S={},Z="/",ee=function(t,o){return!o||o.length===0?t():Promise.all(o.map(r=>{if(r=`${Z}${r}`,r in S)return;S[r]=!0;const i=r.endsWith(".css"),d=i?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${r}"]${d}`))return;const n=document.createElement("link");if(n.rel=i?"stylesheet":X,i||(n.as="script",n.crossOrigin=""),n.href=r,document.head.appendChild(n),i)return new Promise((u,U)=>{n.addEventListener("load",u),n.addEventListener("error",()=>U(new Error(`Unable to preload CSS for ${r}`)))})})).then(()=>t())},te=s("h1",null," Flash Cards Application ",-1),ie=s("hr",null,null,-1),se=c(" Add Directories "),oe={data(){return{}},computed:_({},b({directories:e=>e.directories})),mounted(){this.$store.dispatch("fetchDirectories"),console.log(this.$store.state)}},ne=Object.assign(oe,{setup(e){return(t,o)=>{const r=E("router-link");return l(),a("div",null,[te,(l(!0),a(A,null,B(t.directories,i=>(l(),a("div",{key:i},[k(r,{to:{name:"directory",params:{id:i.dir_id}}},{default:D(()=>[s("h3",null,h(i.dir_name),1)]),_:2},1032,["to"]),ie]))),128)),k(r,{to:{name:"add_dir"}},{default:D(()=>[se]),_:1})])}}}),re={setup(e){return(t,o)=>(l(),a("main",null,[k(ne)]))}};var f=(e,t)=>{const o=e.__vccOpts||e;for(const[r,i]of t)o[r]=i;return o};const de={setup(){F()},data(){return{url:{id:this.$route.params.id+"/add_deck"}}},beforeRouteEnter(e,t,o){e.params.id,o()},computed:_({},b({dir_name:e=>e.individualDir.dir_name,dir_decks:e=>e.individualDir.dir_decks,dir_id:e=>e.individualDir.dir_id})),async mounted(){this.id=this.$route.params.id;let e=this.id;console.log(this.$route.params),this.$store.dispatch("fetchDirectoryById",{id:e})}},le=c(" Add Decks "),ae=c(" Add Decks "),ue=s("div",null,null,-1);function ce(e,t,o,r,i,d){const n=E("router-link");return l(),a("div",null,[s("h2",null,h(e.dir_name),1),k(n,{to:{name:"add_deck",params:{id:e.dir_id}}},{default:D(()=>[le]),_:1},8,["to"]),(l(!0),a(A,null,B(e.dir_decks,u=>(l(),a("div",{key:u.deck_id},[k(n,{to:{name:"deck",params:{id:u.deck_id}}},{default:D(()=>[c(h(u.deck_name),1)]),_:2},1032,["to"]),k(n,{to:{name:"add_deck",params:{id:u.dir_id}}},{default:D(()=>[ae]),_:2},1032,["to"])]))),128)),ue])}var _e=f(de,[["render",ce]]);const me={data(){return{id:{deck_id}}},computed:_({},b({deck_cards:e=>e.individualDeck.deck_cards,deck_name:e=>e.individualDeck.deck_name,deck_id:e=>e.individualDeck.deck_id})),async mounted(){let e=this.$route.params.id;console.log(e),this.$store.dispatch("fetchDeckById",{id:e})}},he={key:0},pe=c(" Start "),ve={key:1};function ke(e,t,o,r,i,d){const n=E("router-link");return l(),a("div",null,[e.deck_name!==void 0?(l(),a("div",he,[s("h1",null,h(e.deck_name),1),c(" "+h(e.deck_cards)+" ",1),k(n,{to:{name:"deck_revision",params:i.id}},{default:D(()=>[pe]),_:1},8,["to"])])):(l(),a("div",ve," Loading "))])}var fe=f(me,[["render",ke]]);const ge={data(){return{easy_queue:[],medium_queue:[],hard_queue:[],main_queue:[],reveal_bool:!1}},computed:y(_({},b({deck_name:e=>e.individualDeck.deck_name,deck_cards:e=>e.individualDeck.deck_cards,deck_id:e=>e.individualDeck.deck_id})),{rearrange(){this.deck_cards&&(this.easy_queue=this.deck_cards.filter(e=>e.level>5),this.medium_queue=this.deck_cards.filter(e=>e.card_level<6&&e.card_level>-5),this.hard_queue=this.deck_cards.filter(e=>e.card_level<-5),this.main_queue=this.main_queue.concat(this.hard_queue).concat(this.medium_queue).concat(this.easy_queue),this.reveal_bool=!1)},reveal(){this.reveal_bool=!this.reveal_bool},easy_click(){let e=this.main_queue.shift();console.log(e.card_level),e.card_level!==1?(e.card_level+=1,this.$store.dispatch("updateCardLevel",e),this.main_queue.push(e)):e=this.main_queue.pop(),this.reveal_bool=!this.reveal_bool},medium_click(){let e=this.main_queue.shift();e.card_level==-1?(e.card_level=0,this.$store.dispatch("updateCardLevel",e)):(e.card_level-=1,this.$store.dispatch("updateCardLevel",e)),this.main_queue.push(e),this.reveal_bool=!this.reveal_bool},hard_click(){let e=this.main_queue.shift();e.card_level!==-1&&(e.card_level=-1,this.$store.dispatch("updateCardLevel",e)),this.main_queue.push(e),this.reveal_bool=!this.reveal_bool},finish(){let e=0;for(let o=0;o<this.main_queue.length;o++)e+=this.main_queue[o].card_level;console.log(this.$store.state.individualDeck);let t=y(_({},this.$store.state.individualDeck),{dir_level:e});console.log(t),this.$store.dispatch("updateDirectoryLevel",t)}}),mounted(){let e=this.$route.params.id;console.log(e),this.$store.dispatch("fetchDeckById",{id:e})}},De=s("h1",null,"Begin",-1),be=[De],ye=s("br",null,null,-1),$e=s("br",null,null,-1),Ce=s("br",null,null,-1),Ee=s("br",null,null,-1),Ie=s("br",null,null,-1),we={key:0},Re=s("h2",null," Show Answer ",-1),Se=[Re],qe={key:0},Ae={key:1},Be=c(" No cards left! "),Le=c(" Add Cards ");function Ue(e,t,o,r,i,d){const n=E("router-link");return l(),a("div",null,[s("button",{onClick:t[0]||(t[0]=(...u)=>d.rearrange&&d.rearrange(...u))},be),ye,c(" "+h(i.medium_queue)+" ",1),$e,c(" "+h(i.hard_queue)+" ",1),Ce,c(" "+h(i.easy_queue)+" ",1),Ee,c(" "+h(i.main_queue),1),Ie,i.main_queue.length!==0?(l(),a("div",we,[s("h3",null,h(i.main_queue[0].front),1),s("button",{onClick:t[1]||(t[1]=(...u)=>d.reveal&&d.reveal(...u))},Se),i.reveal_bool==!0?(l(),a("div",qe,[c(h(i.main_queue[0].back)+" ",1),s("button",{onClick:t[2]||(t[2]=(...u)=>d.easy_click&&d.easy_click(...u))}," Easy "),s("button",{onClick:t[3]||(t[3]=(...u)=>d.medium_click&&d.medium_click(...u))}," Medium "),s("button",{onClick:t[4]||(t[4]=(...u)=>d.hard_click&&d.hard_click(...u))}," Hard "),s("button",{onClick:t[5]||(t[5]=(...u)=>d.finish&&d.finish(...u))}," Finish ")])):K("",!0)])):(l(),a("div",Ae,[Be,k(n,{to:{name:"add_card",params:{id:e.deck_id}}},{default:D(()=>[Le]),_:1},8,["to"])]))])}var Ve=f(ge,[["render",Ue]]);const Te={data(){return{values:{front:"",back:""}}},methods:{add_card(){let e=this.dir_id,t=this.deck_id;console.log(e,t);let o=y(_({},this.values),{dir_id:e,deck_id:t,user_id:1});console.log(o),this.$store.dispatch("addCardByDeck",o)}},computed:_({},b({data:e=>e.individualDeck,deck_id:e=>e.individualDeck.deck_id,dir_id:e=>e.individualDeck.dir_id})),mounted(){let e=this.$route.params.id;this.$store.dispatch("fetchDeckById",{id:e})}},xe=s("h1",null," Add Cards ",-1),Oe=s("hr",null,null,-1),Ye=s("label",null,"Front",-1),Ne=s("label",null,"Back",-1),Ge=s("button",{type:"submit"},"Submit",-1);function Fe(e,t,o,r,i,d){return l(),a("div",null,[xe,Oe,s("form",{onSubmit:[t[2]||(t[2]=$(()=>{},["prevent"])),t[3]||(t[3]=(...n)=>d.add_card&&d.add_card(...n))]},[s("div",null,[Ye,p(s("input",{type:"text","onUpdate:modelValue":t[0]||(t[0]=n=>i.values.front=n)},null,512),[[v,i.values.front]])]),s("div",null,[Ne,p(s("input",{type:"text","onUpdate:modelValue":t[1]||(t[1]=n=>i.values.back=n)},null,512),[[v,i.values.back]])]),Ge],32)])}var Ke=f(Te,[["render",Fe]]);const Pe={data(){return{values:{deck_name:""}}},methods:{add_deck(){let e=this.dir_id;console.log(e);let t=y(_({},this.values),{dir_id:e,user_id:1});console.log(t),this.$store.dispatch("addDeckByDir",t)}},computed:_({},b({dir_id:e=>e.individualDeck.dir_id})),mounted(){let e=this.$route.params.id;this.$store.dispatch("fetchDeckById",{id:e})}},je=s("h1",null," Add Cards ",-1),He=s("hr",null,null,-1),Me=s("label",null,"Name",-1),Qe=s("button",{type:"submit"},"Submit",-1);function We(e,t,o,r,i,d){return l(),a("div",null,[je,He,s("form",{onSubmit:[t[1]||(t[1]=$(()=>{},["prevent"])),t[2]||(t[2]=(...n)=>d.add_deck&&d.add_deck(...n))]},[s("div",null,[Me,p(s("input",{type:"text","onUpdate:modelValue":t[0]||(t[0]=n=>i.values.deck_name=n)},null,512),[[v,i.values.deck_name]])]),Qe],32)])}var ze=f(Pe,[["render",We]]);const Je={data(){return{values:{dir_name:""}}},methods:{add_dir(){let e=y(_({},this.values),{user_id:1});console.log(e),this.$store.dispatch("addDir",e)}},computed:_({},b({dir_id:e=>e.individualDeck.dir_id})),mounted(){let e=this.$route.params.id;this.$store.dispatch("fetchDeckById",{id:e})}},Xe=s("h1",null," Add Cards ",-1),Ze=s("hr",null,null,-1),et=s("label",null,"Name",-1),tt=s("button",{type:"submit"},"Submit",-1);function it(e,t,o,r,i,d){return l(),a("div",null,[Xe,Ze,s("form",{onSubmit:[t[1]||(t[1]=$(()=>{},["prevent"])),t[2]||(t[2]=(...n)=>d.add_dir&&d.add_dir(...n))]},[s("div",null,[et,p(s("input",{type:"text","onUpdate:modelValue":t[0]||(t[0]=n=>i.values.dir_name=n)},null,512),[[v,i.values.dir_name]])]),tt],32)])}var st=f(Je,[["render",it]]);const ot={data(){return{values:{username:"",firstname:"",lastname:"",email:"",password:""}}},methods:{register(){let e=this.values;this.$store.dispatch("registerUser",e,this.$router).then(t=>{t.status==200&&this.$router.push("/login")})}}},nt=s("h1",null," Register ",-1),rt=s("hr",null,null,-1),dt=s("label",null,"Username",-1),lt=s("label",null,"Firstname",-1),at=s("label",null,"Lastname",-1),ut=s("label",null,"Email",-1),ct=s("label",null,"password",-1),_t=s("button",{type:"submit"},"Submit",-1);function mt(e,t,o,r,i,d){return l(),a("div",null,[nt,rt,s("form",{onSubmit:[t[5]||(t[5]=$(()=>{},["prevent"])),t[6]||(t[6]=(...n)=>d.register&&d.register(...n))]},[s("div",null,[dt,p(s("input",{type:"text","onUpdate:modelValue":t[0]||(t[0]=n=>i.values.username=n)},null,512),[[v,i.values.username]])]),s("div",null,[lt,p(s("input",{type:"text","onUpdate:modelValue":t[1]||(t[1]=n=>i.values.firstname=n)},null,512),[[v,i.values.firstname]])]),s("div",null,[at,p(s("input",{type:"text","onUpdate:modelValue":t[2]||(t[2]=n=>i.values.lastname=n)},null,512),[[v,i.values.lastname]])]),s("div",null,[ut,p(s("input",{type:"text","onUpdate:modelValue":t[3]||(t[3]=n=>i.values.email=n)},null,512),[[v,i.values.email]])]),s("div",null,[ct,p(s("input",{type:"password","onUpdate:modelValue":t[4]||(t[4]=n=>i.values.password=n)},null,512),[[v,i.values.password]])]),_t],32)])}var ht=f(ot,[["render",mt]]);const pt={data(){return{values:{email:"",password:""}}},methods:{login(){let e=this.values;this.$store.dispatch("loginUser",e).then(t=>{if(t.status==200){let{data:o}=t,r=o.response.user.authentication_token;localStorage.setItem("auth_token",r),this.$router.push("/")}})}}},vt=s("h1",null," Login ",-1),kt=s("hr",null,null,-1),ft=s("label",null,"Email",-1),gt=s("label",null,"password",-1),Dt=s("button",{type:"submit"},"Submit",-1);function bt(e,t,o,r,i,d){return l(),a("div",null,[vt,kt,s("form",{onSubmit:[t[2]||(t[2]=$(()=>{},["prevent"])),t[3]||(t[3]=(...n)=>d.login&&d.login(...n))]},[s("div",null,[ft,p(s("input",{type:"text","onUpdate:modelValue":t[0]||(t[0]=n=>i.values.email=n)},null,512),[[v,i.values.email]])]),s("div",null,[gt,p(s("input",{type:"password","onUpdate:modelValue":t[1]||(t[1]=n=>i.values.password=n)},null,512),[[v,i.values.password]])]),Dt],32)])}var yt=f(pt,[["render",bt]]);const L=P({history:j("/"),routes:[{path:"/",name:"home",component:re},{path:"/about",name:"about",component:()=>ee(()=>import("./AboutView.415e37c6.js"),["assets/AboutView.415e37c6.js","assets/AboutView.ab071ea6.css","assets/vendor.2f0bcf3d.js"])},{path:"/directory/:id",name:"directory",component:_e},{path:"/deck/:id",name:"deck",component:fe},{path:"/deck/:id/revision",name:"deck_revision",component:Ve},{path:"/deck/:id/addcard",name:"add_card",component:Ke},{path:"/directory/:id/add_deck",name:"add_deck",component:ze},{path:"/add_directory",name:"add_dir",component:st},{path:"/register",name:"register",component:ht},{path:"/login",name:"login",component:yt}]});L.beforeEach((e,t,o)=>{e.name=="register"&&!C()&&o(),e.name=="login"&&C()?o({name:"home"}):e.name=="register"&&C()&&o({name:"home"}),e.name!=="login"&&!C()?o({name:"login"}):o()});const C=()=>!!localStorage.getItem("auth_token"),g="http://192.168.29.210:8000/api",q="http://192.168.29.210:8000";m.interceptors.request.use(e=>(localStorage.getItem("auth_token")&&(e.headers["Authentication-Token"]=localStorage.getItem("auth_token")),console.log(e.headers),e));const $t=new H.Store({state:()=>({data:[],name:"suchith",errors:"",directories:[],cards:[],decks:[],individualDir:{},individualDeck:{},individualCard:{},cardQueue:[],cardQueueStart:0}),mutations:{GET_DIRECTORIES(e,t){e.directories=t},GET_DIRECTORIES_ERROR(e,t){e.errors="fetch error"},GET_DIRECTORY_BY_ID(e,t){console.log(t),e.individualDir=t},GET_DECK_BY_ID(e,t){console.log(t),e.individualDeck=t},GET_CARD_BY_ID(e,t){console.log("commit",t),e.individualCard=t},ADD_CARD_BY_DECK_ID(e,t){console.log(t),e.individualDeck.deck_cards.push(t)},ADD_DECK_BY_DIR(e,t){console.log(t),e.individualDir.dir_decks.push(t)},ADD_DIR(e,t){console.log(t),e.directories.push(t)}},actions:{async fetchDirectoryById({commit:e},t){console.log(t);let o=t.id.toString(),r=await m.get("http://192.168.29.210:8000/api/directory/"+o),{data:i}=r;console.log(i),e("GET_DIRECTORY_BY_ID",i)},async fetchDirectories({commit:e},t){let o=await m.get("http://192.168.29.210:8000/api/directory"),{data:r}=o;console.log(r),e("GET_DIRECTORIES",r)},async fetchDeckById({commit:e},t){console.log(t);let o=t.id.toString(),r=await m.get(g+"/deck/"+o),{data:i}=r;console.log(i),e("GET_DECK_BY_ID",i)},async fetchCardById({commit:e},t){console.log(t);let o=t.id.toString(),r=await m.get(g+"/card/"+o),{data:i}=r;console.log(i),e("GET_CARD_BY_ID",i)},async addCardByDeck({commit:e},t){console.log(t);let o=await m.post(g+"/card",t),{data:r}=o;console.log(r),e("ADD_CARD_BY_DECK_ID",r)},async updateCardLevel({commit:e},t){console.log(t);let{id:o}=t,r=await m.put(g+"/card/"+o,t);console.log(r)},async updateDirectoryLevel({commit:e},t){console.log(t);let{dir_id:o}=t,r=await m.put(g+"/deck/"+o,t);console.log(r)},async addDeckByDir({commit:e},t){console.log(t);let o=await m.post(g+"/deck",t);console.log(o),e("ADD_DECK_BY_DIR",o)},async addDir({commit:e},t){console.log(t);let o=await m.post(g+"/directory",t);e("ADD_DIR",o)},async registerUser({commit:e},t,o){console.log(t);let r=await m.post(q+"/register",t);return console.log(r),r},async loginUser({commit:e},t){console.log(t);let o=await m.post(q+"/login?include_auth_token",t);return console.log(o),o}},getters:{directories:e=>e.directories}}),I=M(J);I.use(Q());I.use(L);I.use($t);I.mount("#app");export{f as _};
